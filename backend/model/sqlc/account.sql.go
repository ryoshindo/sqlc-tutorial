// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: account.sql

package generatedsqlc

import (
	"context"
)

const findByEmail = `-- name: FindByEmail :one
SELECT id, email, created_at, updated_at FROM accounts WHERE email = $1 LIMIT 1
`

func (q *Queries) FindByEmail(ctx context.Context, email string) (Account, error) {
	row := q.db.QueryRowContext(ctx, findByEmail, email)
	var i Account
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const findById = `-- name: FindById :one
SELECT id, email, created_at, updated_at FROM accounts WHERE id = $1 LIMIT 1
`

func (q *Queries) FindById(ctx context.Context, id string) (Account, error) {
	row := q.db.QueryRowContext(ctx, findById, id)
	var i Account
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
